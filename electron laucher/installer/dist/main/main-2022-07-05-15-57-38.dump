"C:\Users\evan\Documents\GitHub\Alpha67-Laucher-Zogmar\electron laucher\installer\dist\main\main.py" crashed at 2022-07-05T15:57:38+0200 (2022-07-05 15:57:38 W. Europe Daylight Time)

os.getcwd() => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main')
os.environ => {'ALLUSERSPROFILE': 'C:\\ProgramData',
               'APPDATA': 'C:\\Users\\evan\\AppData\\Roaming',
               'ASL.LOG': 'Destination=file',
               'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files',
               'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files',
               'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files',
               'COMPUTERNAME': 'DESKTOP-0LF1UAR',
               'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe',
               'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData',
               'HOMEDRIVE': 'C:',
               'HOMEPATH': '\\Users\\evan',
               'HOOPS_LICENSE_KEY': 'c480f7b0c8c5d9481972b65e5bb8%;feae791a3ea8364138cf2d013afcdba1c5161243159cce85783736b215543765278a49565401db0f07d7a21c7c8e79b7e332b480902bcbaca254b0728a1312b970b35c5f62ba9daa4739dc50e3a32e93b9be312778f2db4fa3083142a5a0de18b12616a6e748ba5d0daf5493279a73406f200e%;d0b9',
               'INTEL_DEV_REDIST': 'C:\\Program Files (x86)\\Common Files\\Intel\\Shared '
                                   'Libraries\\',
               'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_321',
               'LOCALAPPDATA': 'C:\\Users\\evan\\AppData\\Local',
               'LOGONSERVER': '\\\\DESKTOP-0LF1UAR',
               'MIC_LD_LIBRARY_PATH': 'C:\\Program Files (x86)\\Common Files\\Intel\\Shared '
                                      'Libraries\\compiler\\lib\\mic',
               'NUMBER_OF_PROCESSORS': '6',
               'ONEDRIVE': 'C:\\Users\\evan\\OneDrive',
               'ONEDRIVECONSUMER': 'C:\\Users\\evan\\OneDrive',
               'OS': 'Windows_NT',
               'PATH': 'C:\\Program Files (x86)\\Common Files\\Intel\\Shared '
                       'Libraries\\redist\\intel64\\compiler;C:\\Program '
                       'Files\\OpenJDK\\jdk-8.0.262.10-hotspot\\bin;C:\\Program Files '
                       '(x86)\\Common '
                       'Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program '
                       'Files\\Git\\cmd;C:\\Program '
                       'Files\\Java\\jdk1.8.0_321\\bin;;C:\\Program Files (x86)\\NVIDIA '
                       'Corporation\\PhysX\\Common;C:\\Program Files\\dotnet\\;C:\\Program '
                       'Files\\Actiona;C:\\Users\\evan\\anaconda3;C:\\Users\\evan\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\evan\\anaconda3\\Library\\usr\\bin;C:\\Users\\evan\\anaconda3\\Library\\bin;C:\\Users\\evan\\anaconda3\\Scripts;C:\\Users\\evan\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\evan\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\evan\\AppData\\Local\\Programs\\Microsoft '
                       'VS Code\\bin',
               'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC',
               'PROCESSOR_ARCHITECTURE': 'AMD64',
               'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 158 Stepping 10, GenuineIntel',
               'PROCESSOR_LEVEL': '6',
               'PROCESSOR_REVISION': '9e0a',
               'PROGRAMDATA': 'C:\\ProgramData',
               'PROGRAMFILES': 'C:\\Program Files',
               'PROGRAMFILES(X86)': 'C:\\Program Files (x86)',
               'PROGRAMW6432': 'C:\\Program Files',
               'PSMODULEPATH': 'C:\\Program '
                               'Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules',
               'PUBLIC': 'C:\\Users\\Public',
               'SESSIONNAME': 'Console',
               'SYSTEMDRIVE': 'C:',
               'SYSTEMROOT': 'C:\\WINDOWS',
               'TCL_LIBRARY': 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                              'laucher\\installer\\dist\\main\\tcl',
               'TEMP': 'C:\\Users\\evan\\AppData\\Local\\Temp',
               'TK_LIBRARY': 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                             'laucher\\installer\\dist\\main\\tk',
               'TMP': 'C:\\Users\\evan\\AppData\\Local\\Temp',
               'USERDOMAIN': 'DESKTOP-0LF1UAR',
               'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-0LF1UAR',
               'USERNAME': 'evan',
               'USERPROFILE': 'C:\\Users\\evan',
               'WINDIR': 'C:\\WINDOWS',
               'ZES_ENABLE_SYSMAN': '1'}


===========================================================================

Traceback (most recent call last):
  File "main.py", line 418, in <module>
  File "main.py", line 70, in __init__
  File "tkinter\__init__.py", line 4064, in __init__
  File "tkinter\__init__.py", line 4009, in __init__
_tkinter.TclError: couldn't open "img/mc1.png": no such file or directory

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "main.py", line 426, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "main.py", line 429, in <module>
ValueError: exception raised


===========================================================================

Summary of exception variables:
__class__ => <class 'ValueError'>
__delattr__ => <method-wrapper '__delattr__' of ValueError object at 0x00000185E3A1CF40>
__dict__ => {}
__dir__ => <built-in method __dir__ of ValueError object at 0x00000185E3A1CF40>
__doc__ => 'Inappropriate argument value (of correct type).'
__eq__ => <method-wrapper '__eq__' of ValueError object at 0x00000185E3A1CF40>
__format__ => <built-in method __format__ of ValueError object at 0x00000185E3A1CF40>
__ge__ => <method-wrapper '__ge__' of ValueError object at 0x00000185E3A1CF40>
__getattribute__ => <method-wrapper '__getattribute__' of ValueError object at 0x00000185E3A1CF40>
__gt__ => <method-wrapper '__gt__' of ValueError object at 0x00000185E3A1CF40>
__hash__ => <method-wrapper '__hash__' of ValueError object at 0x00000185E3A1CF40>
__init__ => <method-wrapper '__init__' of ValueError object at 0x00000185E3A1CF40>
__init_subclass__ => <built-in method __init_subclass__ of type object at 0x00007FFFEB5F1360>
__le__ => <method-wrapper '__le__' of ValueError object at 0x00000185E3A1CF40>
__lt__ => <method-wrapper '__lt__' of ValueError object at 0x00000185E3A1CF40>
__ne__ => <method-wrapper '__ne__' of ValueError object at 0x00000185E3A1CF40>
__new__ => <built-in method __new__ of type object at 0x00007FFFEB5F1360>
__reduce__ => <built-in method __reduce__ of ValueError object at 0x00000185E3A1CF40>
__reduce_ex__ => <built-in method __reduce_ex__ of ValueError object at 0x00000185E3A1CF40>
__repr__ => <method-wrapper '__repr__' of ValueError object at 0x00000185E3A1CF40>
__setattr__ => <method-wrapper '__setattr__' of ValueError object at 0x00000185E3A1CF40>
__setstate__ => <built-in method __setstate__ of ValueError object at 0x00000185E3A1CF40>
__sizeof__ => <built-in method __sizeof__ of ValueError object at 0x00000185E3A1CF40>
__str__ => <method-wrapper '__str__' of ValueError object at 0x00000185E3A1CF40>
__subclasshook__ => <built-in method __subclasshook__ of type object at 0x00007FFFEB5F1360>
__suppress_context__ => True
__traceback__ => <traceback object at 0x00000185E3A32100>
args => ('exception raised',)
with_traceback => <built-in method with_traceback of ValueError object at 0x00000185E3A1CF40>
__cause__ =>
             __class__ => <class 'TypeError'>
             __delattr__ => <method-wrapper '__delattr__' of TypeError object at 0x00000185E3A1CD10>
             __dict__ => {}
             __dir__ => <built-in method __dir__ of TypeError object at 0x00000185E3A1CD10>
             __doc__ => 'Inappropriate argument type.'
             __eq__ => <method-wrapper '__eq__' of TypeError object at 0x00000185E3A1CD10>
             __format__ => <built-in method __format__ of TypeError object at 0x00000185E3A1CD10>
             __ge__ => <method-wrapper '__ge__' of TypeError object at 0x00000185E3A1CD10>
             __getattribute__ => <method-wrapper '__getattribute__' of TypeError object at 0x00000185E3A1CD10>
             __gt__ => <method-wrapper '__gt__' of TypeError object at 0x00000185E3A1CD10>
             __hash__ => <method-wrapper '__hash__' of TypeError object at 0x00000185E3A1CD10>
             __init__ => <method-wrapper '__init__' of TypeError object at 0x00000185E3A1CD10>
             __init_subclass__ => <built-in method __init_subclass__ of type object at 0x00007FFFEB5EE760>
             __le__ => <method-wrapper '__le__' of TypeError object at 0x00000185E3A1CD10>
             __lt__ => <method-wrapper '__lt__' of TypeError object at 0x00000185E3A1CD10>
             __ne__ => <method-wrapper '__ne__' of TypeError object at 0x00000185E3A1CD10>
             __new__ => <built-in method __new__ of type object at 0x00007FFFEB5EE760>
             __reduce__ => <built-in method __reduce__ of TypeError object at 0x00000185E3A1CD10>
             __reduce_ex__ => <built-in method __reduce_ex__ of TypeError object at 0x00000185E3A1CD10>
             __repr__ => <method-wrapper '__repr__' of TypeError object at 0x00000185E3A1CD10>
             __setattr__ => <method-wrapper '__setattr__' of TypeError object at 0x00000185E3A1CD10>
             __setstate__ => <built-in method __setstate__ of TypeError object at 0x00000185E3A1CD10>
             __sizeof__ => <built-in method __sizeof__ of TypeError object at 0x00000185E3A1CD10>
             __str__ => <method-wrapper '__str__' of TypeError object at 0x00000185E3A1CD10>
             __subclasshook__ => <built-in method __subclasshook__ of type object at 0x00007FFFEB5EE760>
             __suppress_context__ => False
             __traceback__ => <traceback object at 0x00000185E3A32580>
             args => ("unsupported operand type(s) for +: 'int' and 'str'",)
             with_traceback => <built-in method with_traceback of TypeError object at 0x00000185E3A1CD10>
             __cause__ => None
             __context__ =>
                            __class__ => <class '_tkinter.TclError'>
                            __delattr__ => <method-wrapper '__delattr__' of TclError object at 0x00000185E3A09580>
                            __dict__ => {}
                            __dir__ => <built-in method __dir__ of TclError object at 0x00000185E3A09580>
                            __doc__ => None
                            __eq__ => <method-wrapper '__eq__' of TclError object at 0x00000185E3A09580>
                            __format__ => <built-in method __format__ of TclError object at 0x00000185E3A09580>
                            __ge__ => <method-wrapper '__ge__' of TclError object at 0x00000185E3A09580>
                            __getattribute__ => <method-wrapper '__getattribute__' of TclError object at 0x00000185E3A09580>
                            __gt__ => <method-wrapper '__gt__' of TclError object at 0x00000185E3A09580>
                            __hash__ => <method-wrapper '__hash__' of TclError object at 0x00000185E3A09580>
                            __init__ => <method-wrapper '__init__' of TclError object at 0x00000185E3A09580>
                            __init_subclass__ => <built-in method __init_subclass__ of type object at 0x00000185E2E65BB0>
                            __le__ => <method-wrapper '__le__' of TclError object at 0x00000185E3A09580>
                            __lt__ => <method-wrapper '__lt__' of TclError object at 0x00000185E3A09580>
                            __module__ => '_tkinter'
                            __ne__ => <method-wrapper '__ne__' of TclError object at 0x00000185E3A09580>
                            __new__ => <built-in method __new__ of type object at 0x00007FFFEB5F2380>
                            __reduce__ => <built-in method __reduce__ of TclError object at 0x00000185E3A09580>
                            __reduce_ex__ => <built-in method __reduce_ex__ of TclError object at 0x00000185E3A09580>
                            __repr__ => <method-wrapper '__repr__' of TclError object at 0x00000185E3A09580>
                            __setattr__ => <method-wrapper '__setattr__' of TclError object at 0x00000185E3A09580>
                            __setstate__ => <built-in method __setstate__ of TclError object at 0x00000185E3A09580>
                            __sizeof__ => <built-in method __sizeof__ of TclError object at 0x00000185E3A09580>
                            __str__ => <method-wrapper '__str__' of TclError object at 0x00000185E3A09580>
                            __subclasshook__ => <built-in method __subclasshook__ of type object at 0x00000185E2E65BB0>
                            __suppress_context__ => False
                            __traceback__ => <traceback object at 0x00000185E3A2ACC0>
                            __weakref__ => None
                            args => ('couldn\'t open "img/mc1.png": no such file or directory',)
                            with_traceback => <built-in method with_traceback of TclError object at 0x00000185E3A09580>
                            __cause__ => None
                            __context__ => None
__context__ => TclError('couldn\'t open "img/mc1.png": no such file or directory')


===========================================================================

Summary of sys variables:
_MEIPASS => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main')
__breakpointhook__ => <built-in function breakpointhook>
__displayhook__ => <built-in function displayhook>
__doc__ => ('This module provides access to some objects used or maintained by the\n'
            'interpreter and to functions that interact strongly with the interpreter.\n'
            '\n'
            'Dynamic objects:\n'
            '\n'
            'argv -- command line arguments; argv[0] is the script pathname if known\n'
            "path -- module search path; path[0] is the script directory, else ''\n"
            'modules -- dictionary of loaded modules\n'
            '\n'
            'displayhook -- called to show results in an interactive session\n'
            'excepthook -- called to handle any uncaught exception other than SystemExit\n'
            '  To customize printing in an interactive session or to install a custom\n'
            '  top-level exception handler, assign other functions to replace these.\n'
            '\n'
            'stdin -- standard input file object; used by input()\n'
            'stdout -- standard output file object; used by print()\n'
            'stderr -- standard error object; used for error messages\n'
            '  By assigning other file objects (or objects that behave like files)\n'
            "  to these, it is possible to redirect all of the interpreter's I/O.\n"
            '\n'
            'last_type -- type of last uncaught exception\n'
            'last_value -- value of last uncaught exception\n'
            'last_traceback -- traceback of last uncaught exception\n'
            '  These three are only available in an interactive session after a\n'
            '  traceback has been printed.\n'
            '\n'
            'Static objects:\n'
            '\n'
            'builtin_module_names -- tuple of module names built into this interpreter\n'
            'copyright -- copyright notice pertaining to this interpreter\n'
            'exec_prefix -- prefix used to find the machine-specific Python library\n'
            'executable -- absolute path of the executable binary of the Python '
            'interpreter\n'
            'float_info -- a named tuple with information about the float '
            'implementation.\n'
            'float_repr_style -- string indicating the style of repr() output for floats\n'
            'hash_info -- a named tuple with information about the hash algorithm.\n'
            'hexversion -- version information encoded as a single integer\n'
            'implementation -- Python implementation information.\n'
            'int_info -- a named tuple with information about the int implementation.\n'
            'maxsize -- the largest supported length of containers.\n'
            'maxunicode -- the value of the largest Unicode code point\n'
            'platform -- platform identifier\n'
            'prefix -- prefix used to find the Python library\n'
            'thread_info -- a named tuple with information about the thread '
            'implementation.\n'
            'version -- the version of this interpreter as a string\n'
            'version_info -- version information as a named tuple\n'
            'dllhandle -- [Windows only] integer handle of the Python DLL\n'
            'winver -- [Windows only] version number of the Python DLL\n'
            '_enablelegacywindowsfsencoding -- [Windows only]\n'
            "__stdin__ -- the original stdin; don't touch!\n"
            "__stdout__ -- the original stdout; don't touch!\n"
            "__stderr__ -- the original stderr; don't touch!\n"
            "__displayhook__ -- the original displayhook; don't touch!\n"
            "__excepthook__ -- the original excepthook; don't touch!\n"
            '\n'
            'Functions:\n'
            '\n'
            'displayhook() -- print an object to the screen, and save it in builtins._\n'
            'excepthook() -- print an exception and its traceback to sys.stderr\n'
            'exc_info() -- return thread-safe information about the current exception\n'
            'exit() -- exit the interpreter by raising SystemExit\n'
            'getdlopenflags() -- returns flags to be used for dlopen() calls\n'
            'getprofile() -- get the global profiling function\n'
            'getrefcount() -- return the reference count for an object (plus one :-)\n'
            'getrecursionlimit() -- return the max recursion depth for the interpreter\n'
            'getsizeof() -- return the size of an object in bytes\n'
            'gettrace() -- get the global debug tracing function\n'
            'setcheckinterval() -- control how often the interpreter checks for events\n'
            'setdlopenflags() -- set the flags to be used for dlopen() calls\n'
            'setprofile() -- set the global profiling function\n'
            'setrecursionlimit() -- set the max recursion depth for the interpreter\n'
            'settrace() -- set the global debug tracing function\n')
__excepthook__ => <built-in function excepthook>
__loader__ => <class '_frozen_importlib.BuiltinImporter'>
__name__ => 'sys'
__package__ => ''
__spec__ => ModuleSpec(name='sys', loader=<class '_frozen_importlib.BuiltinImporter'>)
__stderr__ => None
__stdin__ => None
__stdout__ => None
__unraisablehook__ => <built-in function unraisablehook>
_base_executable => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                     'laucher\\installer\\dist\\main\\main.exe')
_clear_type_cache => <built-in function _clear_type_cache>
_current_frames => <built-in function _current_frames>
_debugmallocstats => <built-in function _debugmallocstats>
_enablelegacywindowsfsencoding => <built-in function _enablelegacywindowsfsencoding>
_framework => ''
_getframe => <built-in function _getframe>
_git => ('CPython', '', '')
_xoptions => {}
addaudithook => <built-in function addaudithook>
api_version => 1013
argv => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
         'laucher\\installer\\dist\\main\\main.exe']
audit => <built-in function audit>
base_exec_prefix => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                     'laucher\\installer\\dist\\main')
base_prefix => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main')
breakpointhook => <built-in function breakpointhook>
builtin_module_names => ('_abc',
                         '_ast',
                         '_bisect',
                         '_blake2',
                         '_codecs',
                         '_codecs_cn',
                         '_codecs_hk',
                         '_codecs_iso2022',
                         '_codecs_jp',
                         '_codecs_kr',
                         '_codecs_tw',
                         '_collections',
                         '_contextvars',
                         '_csv',
                         '_datetime',
                         '_functools',
                         '_heapq',
                         '_imp',
                         '_io',
                         '_json',
                         '_locale',
                         '_lsprof',
                         '_md5',
                         '_multibytecodec',
                         '_opcode',
                         '_operator',
                         '_pickle',
                         '_random',
                         '_sha1',
                         '_sha256',
                         '_sha3',
                         '_sha512',
                         '_signal',
                         '_sre',
                         '_stat',
                         '_statistics',
                         '_string',
                         '_struct',
                         '_symtable',
                         '_thread',
                         '_tracemalloc',
                         '_warnings',
                         '_weakref',
                         '_winapi',
                         '_xxsubinterpreters',
                         'array',
                         'atexit',
                         'audioop',
                         'binascii',
                         'builtins',
                         'cmath',
                         'errno',
                         'faulthandler',
                         'gc',
                         'itertools',
                         'marshal',
                         'math',
                         'mmap',
                         'msvcrt',
                         'nt',
                         'parser',
                         'sys',
                         'time',
                         'winreg',
                         'xxsubtype',
                         'zlib')
byteorder => 'little'
call_tracing => <built-in function call_tracing>
callstats => <built-in function callstats>
copyright => ('Copyright (c) 2001-2022 Python Software Foundation.\n'
              'All Rights Reserved.\n'
              '\n'
              'Copyright (c) 2000 BeOpen.com.\n'
              'All Rights Reserved.\n'
              '\n'
              'Copyright (c) 1995-2001 Corporation for National Research Initiatives.\n'
              'All Rights Reserved.\n'
              '\n'
              'Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\n'
              'All Rights Reserved.')
displayhook => <built-in function displayhook>
dllhandle => 140737137737728
dont_write_bytecode => True
exc_info => <built-in function exc_info>
excepthook => <function inject_excepthook.<locals>.excepthook at 0x00000185E3A22B80>
exec_prefix => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main')
executable => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
               'laucher\\installer\\dist\\main\\main.exe')
exit => <built-in function exit>
flags => sys.flags(debug=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=1, no_user_site=1, no_site=1, ignore_environment=1, verbose=0, bytes_warning=0, quiet=0, hash_randomization=1, isolated=0, dev_mode=False, utf8_mode=0)
float_info => sys.float_info(max=1.7976931348623157e+308, max_exp=1024, max_10_exp=308, min=2.2250738585072014e-308, min_exp=-1021, min_10_exp=-307, dig=15, mant_dig=53, epsilon=2.220446049250313e-16, radix=2, rounds=1)
float_repr_style => 'short'
frozen => True
get_asyncgen_hooks => <built-in function get_asyncgen_hooks>
get_coroutine_origin_tracking_depth => <built-in function get_coroutine_origin_tracking_depth>
getallocatedblocks => <built-in function getallocatedblocks>
getcheckinterval => <built-in function getcheckinterval>
getdefaultencoding => <built-in function getdefaultencoding>
getfilesystemencodeerrors => <built-in function getfilesystemencodeerrors>
getfilesystemencoding => <built-in function getfilesystemencoding>
getprofile => <built-in function getprofile>
getrecursionlimit => <built-in function getrecursionlimit>
getrefcount => <built-in function getrefcount>
getsizeof => <built-in function getsizeof>
getswitchinterval => <built-in function getswitchinterval>
gettrace => <built-in function gettrace>
getwindowsversion => <built-in function getwindowsversion>
hash_info => sys.hash_info(width=64, modulus=2305843009213693951, inf=314159, nan=0, imag=1000003, algorithm='siphash24', hash_bits=64, seed_bits=128, cutoff=0)
hexversion => 50859504
implementation => namespace(cache_tag='cpython-38', hexversion=50859504, name='cpython', version=sys.version_info(major=3, minor=8, micro=13, releaselevel='final', serial=0))
int_info => sys.int_info(bits_per_digit=30, sizeof_digit=4)
intern => <built-in function intern>
is_finalizing => <built-in function is_finalizing>
last_traceback => <traceback object at 0x00000185E3A32100>
last_type => <class 'ValueError'>
last_value => ValueError('exception raised')
maxsize => 9223372036854775807
maxunicode => 1114111
meta_path => [<class '_frozen_importlib.BuiltinImporter'>,
              <class '_frozen_importlib.FrozenImporter'>,
              <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>,
              <class '_frozen_importlib_external.PathFinder'>,
              <pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>]
modules => {'PIL': <module 'PIL' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\__init__.pyc'>,
            'PIL.Image': <module 'PIL.Image' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\Image.pyc'>,
            'PIL.ImageColor': <module 'PIL.ImageColor' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\ImageColor.pyc'>,
            'PIL.ImageDraw': <module 'PIL.ImageDraw' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\ImageDraw.pyc'>,
            'PIL.ImageFont': <module 'PIL.ImageFont' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\ImageFont.pyc'>,
            'PIL.ImageMode': <module 'PIL.ImageMode' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\ImageMode.pyc'>,
            'PIL.ImageTk': <module 'PIL.ImageTk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\ImageTk.pyc'>,
            'PIL.TiffTags': <module 'PIL.TiffTags' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\TiffTags.pyc'>,
            'PIL._binary': <module 'PIL._binary' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\_binary.pyc'>,
            'PIL._imaging': <module 'PIL._imaging' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\_imaging.cp38-win_amd64.pyd'>,
            'PIL._imagingft': <module 'PIL._imagingft' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\_imagingft.cp38-win_amd64.pyd'>,
            'PIL._util': <module 'PIL._util' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\_util.pyc'>,
            'PIL._version': <module 'PIL._version' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL\\_version.pyc'>,
            '__future__': <module '__future__' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\__future__.pyc'>,
            '__main__': <module '__main__' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\main.py'>,
            '__mp_main__': <module '__main__' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\main.py'>,
            '_abc': <module '_abc' (built-in)>,
            '_bisect': <module '_bisect' (built-in)>,
            '_blake2': <module '_blake2' (built-in)>,
            '_bootlocale': <module '_bootlocale' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\_bootlocale.pyc'>,
            '_bz2': <module '_bz2' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_bz2.pyd'>,
            '_codecs': <module '_codecs' (built-in)>,
            '_collections': <module '_collections' (built-in)>,
            '_collections_abc': <module '_collections_abc' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\_collections_abc.pyc'>,
            '_compat_pickle': <module '_compat_pickle' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_compat_pickle.pyc'>,
            '_compression': <module '_compression' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_compression.pyc'>,
            '_ctypes': <module '_ctypes' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_ctypes.pyd'>,
            '_datetime': <module '_datetime' (built-in)>,
            '_frozen_importlib': <module 'importlib._bootstrap' (frozen)>,
            '_frozen_importlib_external': <module 'importlib._bootstrap_external' (frozen)>,
            '_functools': <module '_functools' (built-in)>,
            '_hashlib': <module '_hashlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_hashlib.pyd'>,
            '_heapq': <module '_heapq' (built-in)>,
            '_imp': <module '_imp' (built-in)>,
            '_io': <module 'io' (built-in)>,
            '_json': <module '_json' (built-in)>,
            '_locale': <module '_locale' (built-in)>,
            '_lzma': <module '_lzma' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_lzma.pyd'>,
            '_opcode': <module '_opcode' (built-in)>,
            '_operator': <module '_operator' (built-in)>,
            '_pickle': <module '_pickle' (built-in)>,
            '_random': <module '_random' (built-in)>,
            '_sha3': <module '_sha3' (built-in)>,
            '_sha512': <module '_sha512' (built-in)>,
            '_signal': <module '_signal' (built-in)>,
            '_socket': <module '_socket' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_socket.pyd'>,
            '_sre': <module '_sre' (built-in)>,
            '_ssl': <module '_ssl' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_ssl.pyd'>,
            '_stat': <module '_stat' (built-in)>,
            '_string': <module '_string' (built-in)>,
            '_struct': <module '_struct' (built-in)>,
            '_thread': <module '_thread' (built-in)>,
            '_tkinter': <module '_tkinter' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_tkinter.pyd'>,
            '_warnings': <module '_warnings' (built-in)>,
            '_weakref': <module '_weakref' (built-in)>,
            '_weakrefset': <module '_weakrefset' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\_weakrefset.pyc'>,
            '_winapi': <module '_winapi' (built-in)>,
            'abc': <module 'abc' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\abc.pyc'>,
            'atexit': <module 'atexit' (built-in)>,
            'base64': <module 'base64' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base64.pyc'>,
            'binascii': <module 'binascii' (built-in)>,
            'bisect': <module 'bisect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\bisect.pyc'>,
            'builtins': <module 'builtins' (built-in)>,
            'bz2': <module 'bz2' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\bz2.pyc'>,
            'calendar': <module 'calendar' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\calendar.pyc'>,
            'cffi': <module 'cffi' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\cffi\\__init__.pyc'>,
            'cffi.api': <module 'cffi.api' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\cffi\\api.pyc'>,
            'cffi.error': <module 'cffi.error' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\cffi\\error.pyc'>,
            'cffi.lock': <module 'cffi.lock' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\cffi\\lock.pyc'>,
            'cffi.model': <module 'cffi.model' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\cffi\\model.pyc'>,
            'codecs': <module 'codecs' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\codecs.pyc'>,
            'collections': <module 'collections' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\collections\\__init__.pyc'>,
            'collections.abc': <module 'collections.abc' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\collections\\abc.pyc'>,
            'colorsys': <module 'colorsys' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\colorsys.pyc'>,
            'contextlib': <module 'contextlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\contextlib.pyc'>,
            'copy': <module 'copy' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\copy.pyc'>,
            'copyreg': <module 'copyreg' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\copyreg.pyc'>,
            'crashreport': <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>,
            'ctypes': <module 'ctypes' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ctypes\\__init__.pyc'>,
            'ctypes._endian': <module 'ctypes._endian' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ctypes\\_endian.pyc'>,
            'datetime': <module 'datetime' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\datetime.pyc'>,
            'dis': <module 'dis' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\dis.pyc'>,
            'email': <module 'email' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\__init__.pyc'>,
            'email._encoded_words': <module 'email._encoded_words' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\_encoded_words.pyc'>,
            'email._parseaddr': <module 'email._parseaddr' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\_parseaddr.pyc'>,
            'email._policybase': <module 'email._policybase' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\_policybase.pyc'>,
            'email.base64mime': <module 'email.base64mime' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\base64mime.pyc'>,
            'email.charset': <module 'email.charset' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\charset.pyc'>,
            'email.encoders': <module 'email.encoders' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\encoders.pyc'>,
            'email.errors': <module 'email.errors' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\errors.pyc'>,
            'email.feedparser': <module 'email.feedparser' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\feedparser.pyc'>,
            'email.header': <module 'email.header' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\header.pyc'>,
            'email.iterators': <module 'email.iterators' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\iterators.pyc'>,
            'email.message': <module 'email.message' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\message.pyc'>,
            'email.parser': <module 'email.parser' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\parser.pyc'>,
            'email.quoprimime': <module 'email.quoprimime' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\quoprimime.pyc'>,
            'email.utils': <module 'email.utils' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\email\\utils.pyc'>,
            'encodings': <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>,
            'encodings.aliases': <module 'encodings.aliases' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\aliases.pyc'>,
            'encodings.cp1252': <module 'encodings.cp1252' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\cp1252.pyc'>,
            'encodings.latin_1': <module 'encodings.latin_1' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\latin_1.pyc'>,
            'encodings.utf_8': <module 'encodings.utf_8' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\utf_8.pyc'>,
            'enum': <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>,
            'errno': <module 'errno' (built-in)>,
            'fnmatch': <module 'fnmatch' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\fnmatch.pyc'>,
            'functools': <module 'functools' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\functools.pyc'>,
            'genericpath': <module 'genericpath' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\genericpath.pyc'>,
            'hashlib': <module 'hashlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\hashlib.pyc'>,
            'heapq': <module 'heapq' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\heapq.pyc'>,
            'http': <module 'http' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\http\\__init__.pyc'>,
            'http.client': <module 'http.client' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\http\\client.pyc'>,
            'importlib': <module 'importlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\importlib\\__init__.pyc'>,
            'importlib._bootstrap': <module 'importlib._bootstrap' (frozen)>,
            'importlib._bootstrap_external': <module 'importlib._bootstrap_external' (frozen)>,
            'importlib.abc': <module 'importlib.abc' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\importlib\\abc.pyc'>,
            'importlib.machinery': <module 'importlib.machinery' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\importlib\\machinery.pyc'>,
            'importlib.util': <module 'importlib.util' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\importlib\\util.pyc'>,
            'inspect': <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>,
            'io': <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>,
            'itertools': <module 'itertools' (built-in)>,
            'json': <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>,
            'json.decoder': <module 'json.decoder' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\decoder.pyc'>,
            'json.encoder': <module 'json.encoder' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\encoder.pyc'>,
            'json.scanner': <module 'json.scanner' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\scanner.pyc'>,
            'keyword': <module 'keyword' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\keyword.pyc'>,
            'linecache': <module 'linecache' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\linecache.pyc'>,
            'locale': <module 'locale' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\locale.pyc'>,
            'logging': <module 'logging' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\logging\\__init__.pyc'>,
            'lzma': <module 'lzma' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\lzma.pyc'>,
            'marshal': <module 'marshal' (built-in)>,
            'math': <module 'math' (built-in)>,
            'msvcrt': <module 'msvcrt' (built-in)>,
            'multiprocessing': <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>,
            'multiprocessing.context': <module 'multiprocessing.context' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\context.pyc'>,
            'multiprocessing.popen_spawn_win32': <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>,
            'multiprocessing.process': <module 'multiprocessing.process' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\process.pyc'>,
            'multiprocessing.reduction': <module 'multiprocessing.reduction' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\reduction.pyc'>,
            'multiprocessing.spawn': <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>,
            'multiprocessing.util': <module 'multiprocessing.util' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\util.pyc'>,
            'nt': <module 'nt' (built-in)>,
            'ntpath': <module 'ntpath' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ntpath.pyc'>,
            'nturl2path': <module 'nturl2path' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\nturl2path.pyc'>,
            'numbers': <module 'numbers' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\numbers.pyc'>,
            'opcode': <module 'opcode' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\opcode.pyc'>,
            'operator': <module 'operator' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\operator.pyc'>,
            'os': <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>,
            'os.path': <module 'ntpath' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ntpath.pyc'>,
            'pathlib': <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>,
            'pickle': <module 'pickle' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pickle.pyc'>,
            'pkg_resources': <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>,
            'pkg_resources._vendor': <module 'pkg_resources._vendor' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\__init__.pyc'>,
            'pkg_resources._vendor.appdirs': <module 'pkg_resources.extern.appdirs' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkg_resources._vendor.packaging': <module 'pkg_resources.extern.packaging' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkg_resources._vendor.packaging.__about__': <module 'pkg_resources._vendor.packaging.__about__' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\__about__.pyc'>,
            'pkg_resources._vendor.pyparsing': <module 'pkg_resources.extern.pyparsing' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkg_resources.extern': <module 'pkg_resources.extern' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\extern\\__init__.pyc'>,
            'pkg_resources.extern.appdirs': <module 'pkg_resources.extern.appdirs' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkg_resources.extern.packaging': <module 'pkg_resources.extern.packaging' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkg_resources.extern.packaging._compat': <module 'pkg_resources.extern.packaging._compat' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\_compat.pyc'>,
            'pkg_resources.extern.packaging._structures': <module 'pkg_resources.extern.packaging._structures' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\_structures.pyc'>,
            'pkg_resources.extern.packaging._typing': <module 'pkg_resources.extern.packaging._typing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\_typing.pyc'>,
            'pkg_resources.extern.packaging.markers': <module 'pkg_resources.extern.packaging.markers' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\markers.pyc'>,
            'pkg_resources.extern.packaging.requirements': <module 'pkg_resources.extern.packaging.requirements' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\requirements.pyc'>,
            'pkg_resources.extern.packaging.specifiers': <module 'pkg_resources.extern.packaging.specifiers' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\specifiers.pyc'>,
            'pkg_resources.extern.packaging.utils': <module 'pkg_resources.extern.packaging.utils' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\utils.pyc'>,
            'pkg_resources.extern.packaging.version': <module 'pkg_resources.extern.packaging.version' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\_vendor\\packaging\\version.pyc'>,
            'pkg_resources.extern.pyparsing': <module 'pkg_resources.extern.pyparsing' (<pkg_resources.extern.VendorImporter object at 0x00000185E30542B0>)>,
            'pkgutil': <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>,
            'platform': <module 'platform' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\platform.pyc'>,
            'plistlib': <module 'plistlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\plistlib.pyc'>,
            'posixpath': <module 'posixpath' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\posixpath.pyc'>,
            'pprint': <module 'pprint' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pprint.pyc'>,
            'pyexpat': <module 'pyexpat' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pyexpat.pyd'>,
            'pyexpat.errors': <module 'pyexpat.errors'>,
            'pyexpat.model': <module 'pyexpat.model'>,
            'pyimod01_os_path': <module 'pyimod01_os_path' from 'PyInstaller\\loader\\pyimod01_os_path.py'>,
            'pyimod02_archive': <module 'pyimod02_archive' from 'PyInstaller\\loader\\pyimod02_archive.py'>,
            'pyimod03_importers': <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>,
            'pyimod04_ctypes': <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>,
            'quopri': <module 'quopri' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\quopri.pyc'>,
            'random': <module 'random' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\random.pyc'>,
            're': <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>,
            'reprlib': <module 'reprlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\reprlib.pyc'>,
            'runpy': <module 'runpy' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\runpy.pyc'>,
            'select': <module 'select' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\select.pyd'>,
            'selectors': <module 'selectors' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\selectors.pyc'>,
            'shutil': <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>,
            'signal': <module 'signal' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\signal.pyc'>,
            'socket': <module 'socket' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\socket.pyc'>,
            'sre_compile': <module 'sre_compile' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\sre_compile.pyc'>,
            'sre_constants': <module 'sre_constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\sre_constants.pyc'>,
            'sre_parse': <module 'sre_parse' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\sre_parse.pyc'>,
            'ssl': <module 'ssl' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ssl.pyc'>,
            'stat': <module 'stat' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\stat.pyc'>,
            'string': <module 'string' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\string.pyc'>,
            'struct': <module 'struct' from 'struct.py'>,
            'subprocess': <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>,
            'sys': <module 'sys' (built-in)>,
            'sysconfig': <module 'sysconfig' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\sysconfig.pyc'>,
            'tempfile': <module 'tempfile' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tempfile.pyc'>,
            'textwrap': <module 'textwrap' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\textwrap.pyc'>,
            'threading': <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>,
            'time': <module 'time' (built-in)>,
            'tkinter': <module 'tkinter' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\__init__.pyc'>,
            'tkinter.commondialog': <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>,
            'tkinter.constants': <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>,
            'tkinter.font': <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>,
            'tkinter.messagebox': <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>,
            'tkinter.scrolledtext': <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>,
            'tkinter.ttk': <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>,
            'token': <module 'token' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\token.pyc'>,
            'tokenize': <module 'tokenize' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\tokenize.pyc'>,
            'traceback': <module 'traceback' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\traceback.pyc'>,
            'ttkbootstrap': <module 'ttkbootstrap' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\__init__.pyc'>,
            'ttkbootstrap.constants': <module 'ttkbootstrap.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\constants.pyc'>,
            'ttkbootstrap.dialogs': <module 'ttkbootstrap.dialogs' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\dialogs\\__init__.pyc'>,
            'ttkbootstrap.dialogs.dialogs': <module 'ttkbootstrap.dialogs.dialogs' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\dialogs\\dialogs.pyc'>,
            'ttkbootstrap.icons': <module 'ttkbootstrap.icons' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\icons.pyc'>,
            'ttkbootstrap.localization': <module 'ttkbootstrap.localization' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\localization\\__init__.pyc'>,
            'ttkbootstrap.localization.msgcat': <module 'ttkbootstrap.localization.msgcat' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\localization\\msgcat.pyc'>,
            'ttkbootstrap.localization.msgs': <module 'ttkbootstrap.localization.msgs' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\localization\\msgs.pyc'>,
            'ttkbootstrap.publisher': <module 'ttkbootstrap.publisher' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\publisher.pyc'>,
            'ttkbootstrap.style': <module 'ttkbootstrap.style' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\style.pyc'>,
            'ttkbootstrap.themes': <module 'ttkbootstrap.themes' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\themes\\__init__.pyc'>,
            'ttkbootstrap.themes.standard': <module 'ttkbootstrap.themes.standard' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\themes\\standard.pyc'>,
            'ttkbootstrap.themes.user': <module 'ttkbootstrap.themes.user' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\themes\\user.pyc'>,
            'ttkbootstrap.utility': <module 'ttkbootstrap.utility' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\utility.pyc'>,
            'ttkbootstrap.widgets': <module 'ttkbootstrap.widgets' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\widgets.pyc'>,
            'ttkbootstrap.window': <module 'ttkbootstrap.window' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\ttkbootstrap\\window.pyc'>,
            'types': <module 'types' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\types.pyc'>,
            'typing': <module 'typing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\typing.pyc'>,
            'typing.io': <class 'typing.io'>,
            'typing.re': <class 'typing.re'>,
            'urllib': <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>,
            'urllib.error': <module 'urllib.error' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\error.pyc'>,
            'urllib.parse': <module 'urllib.parse' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\parse.pyc'>,
            'urllib.request': <module 'urllib.request' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\request.pyc'>,
            'urllib.response': <module 'urllib.response' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\response.pyc'>,
            'uu': <module 'uu' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\uu.pyc'>,
            'warnings': <module 'warnings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\warnings.pyc'>,
            'weakref': <module 'weakref' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\weakref.pyc'>,
            'winreg': <module 'winreg' (built-in)>,
            'xml': <module 'xml' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\xml\\__init__.pyc'>,
            'xml.parsers': <module 'xml.parsers' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\xml\\parsers\\__init__.pyc'>,
            'xml.parsers.expat': <module 'xml.parsers.expat' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\xml\\parsers\\expat.pyc'>,
            'xml.parsers.expat.errors': <module 'pyexpat.errors'>,
            'xml.parsers.expat.model': <module 'pyexpat.model'>,
            'zipfile': <module 'zipfile' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\zipfile.pyc'>,
            'zipimport': <module 'zipimport' (frozen)>,
            'zlib': <module 'zlib' (built-in)>}
path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
         'laucher\\installer\\dist\\main\\base_library.zip',
         'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
         'laucher\\installer\\dist\\main\\lib-dynload',
         'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
         'laucher\\installer\\dist\\main']
path_hooks => [<class 'zipimport.zipimporter'>,
               <function FileFinder.path_hook.<locals>.path_hook_for_FileFinder at 0x00000185E235EE50>]
path_importer_cache => {'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main': FileFinder('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main'),
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL': FileFinder('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\PIL'),
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip': <zipimporter object "C:\Users\evan\Documents\GitHub\Alpha67-Laucher-Zogmar\electron laucher\installer\dist\main\base_library.zip\">,
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\collections': <zipimporter object "C:\Users\evan\Documents\GitHub\Alpha67-Laucher-Zogmar\electron laucher\installer\dist\main\base_library.zip\collections\">,
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings': <zipimporter object "C:\Users\evan\Documents\GitHub\Alpha67-Laucher-Zogmar\electron laucher\installer\dist\main\base_library.zip\encodings\">,
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\lib-dynload': None,
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\main.exe?318669': None,
                        'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\extern': None}
platform => 'win32'
prefix => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main')
pycache_prefix => None
set_asyncgen_hooks => <built-in function set_asyncgen_hooks>
set_coroutine_origin_tracking_depth => <built-in function set_coroutine_origin_tracking_depth>
setcheckinterval => <built-in function setcheckinterval>
setprofile => <built-in function setprofile>
setrecursionlimit => <built-in function setrecursionlimit>
setswitchinterval => <built-in function setswitchinterval>
settrace => <built-in function settrace>
stderr => <__main__.NullWriter object at 0x00000185E2409220>
stdin => None
stdout => <__main__.NullWriter object at 0x00000185E2409070>
thread_info => sys.thread_info(name='nt', lock=None, version=None)
unraisablehook => <built-in function unraisablehook>
version => '3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]'
version_info => sys.version_info(major=3, minor=8, micro=13, releaselevel='final', serial=0)
warnoptions => []
winver => '3.8'


===========================================================================
===========================================================================
===========================================================================

Following is an exhaustive stack trace (most recent call last) for TclError('couldn\'t open "img/mc1.png": no such file or directory')

===========================================================================

File "main.py", line 418, in <module>
Local variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")

Global variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")


===========================================================================

File "main.py", line 70, in __init__
Local variables:
self => <__main__.MainWindow object at 0x00000185E3A13CD0>
style => <ttkbootstrap.style.Style object at 0x00000185E3A13D00>
Tk_Width => 761
Tk_Height => 403
x_Left => 579
y_Top => 338

Global variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")


===========================================================================

File "tkinter\__init__.py", line 4064, in __init__
Local variables:
self => <tkinter.PhotoImage object at 0x00000185E3A29AF0>
name => None
cnf => {}
master => None
kw => {'file': 'img/mc1.png'}

Global variables:
__name__ => 'tkinter'
__doc__ => ('Wrapper functions for Tcl/Tk.\n'
            '\n'
            'Tkinter provides classes which allow the display, positioning and\n'
            'control of widgets. Toplevel widgets are Tk and Toplevel. Other\n'
            'widgets are Frame, Label, Entry, Text, Canvas, Button, Radiobutton,\n'
            'Checkbutton, Scale, Listbox, Scrollbar, OptionMenu, Spinbox\n'
            'LabelFrame and PanedWindow.\n'
            '\n'
            'Properties of the widgets are specified with keyword arguments.\n'
            'Keyword arguments have the same name as the corresponding resource\n'
            'under Tk.\n'
            '\n'
            'Widgets are positioned with one of the geometry managers Place, Pack\n'
            'or Grid. These managers can be called with methods place, pack, grid\n'
            'available in every Widget.\n'
            '\n'
            'Actions are bound to events by resources (e.g. keyword argument\n'
            'command) or with the method bind.\n'
            '\n'
            'Example (Hello, World):\n'
            'import tkinter\n'
            'from tkinter.constants import *\n'
            'tk = tkinter.Tk()\n'
            'frame = tkinter.Frame(tk, relief=RIDGE, borderwidth=2)\n'
            'frame.pack(fill=BOTH,expand=1)\n'
            'label = tkinter.Label(frame, text="Hello, World")\n'
            'label.pack(fill=X, expand=1)\n'
            'button = tkinter.Button(frame,text="Exit",command=tk.destroy)\n'
            'button.pack(side=BOTTOM)\n'
            'tk.mainloop()\n')
__package__ => 'tkinter'
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => ModuleSpec(name='tkinter', loader=<pyimod03_importers.FrozenImporter object at 0x00000185E2409040>, origin='C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\__init__.pyc', submodule_search_locations=['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter'])
__path__ => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\tkinter']
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\tkinter\\__init__.pyc')
__cached__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
               'laucher\\installer\\dist\\main\\tkinter\\__init__.pyc')
__builtins__ => {'ArithmeticError': <class 'ArithmeticError'>,
                 'AssertionError': <class 'AssertionError'>,
                 'AttributeError': <class 'AttributeError'>,
                 'BaseException': <class 'BaseException'>,
                 'BlockingIOError': <class 'BlockingIOError'>,
                 'BrokenPipeError': <class 'BrokenPipeError'>,
                 'BufferError': <class 'BufferError'>,
                 'BytesWarning': <class 'BytesWarning'>,
                 'ChildProcessError': <class 'ChildProcessError'>,
                 'ConnectionAbortedError': <class 'ConnectionAbortedError'>,
                 'ConnectionError': <class 'ConnectionError'>,
                 'ConnectionRefusedError': <class 'ConnectionRefusedError'>,
                 'ConnectionResetError': <class 'ConnectionResetError'>,
                 'DeprecationWarning': <class 'DeprecationWarning'>,
                 'EOFError': <class 'EOFError'>,
                 'Ellipsis': Ellipsis,
                 'EnvironmentError': <class 'OSError'>,
                 'Exception': <class 'Exception'>,
                 'False': False,
                 'FileExistsError': <class 'FileExistsError'>,
                 'FileNotFoundError': <class 'FileNotFoundError'>,
                 'FloatingPointError': <class 'FloatingPointError'>,
                 'FutureWarning': <class 'FutureWarning'>,
                 'GeneratorExit': <class 'GeneratorExit'>,
                 'IOError': <class 'OSError'>,
                 'ImportError': <class 'ImportError'>,
                 'ImportWarning': <class 'ImportWarning'>,
                 'IndentationError': <class 'IndentationError'>,
                 'IndexError': <class 'IndexError'>,
                 'InterruptedError': <class 'InterruptedError'>,
                 'IsADirectoryError': <class 'IsADirectoryError'>,
                 'KeyError': <class 'KeyError'>,
                 'KeyboardInterrupt': <class 'KeyboardInterrupt'>,
                 'LookupError': <class 'LookupError'>,
                 'MemoryError': <class 'MemoryError'>,
                 'ModuleNotFoundError': <class 'ModuleNotFoundError'>,
                 'NameError': <class 'NameError'>,
                 'None': None,
                 'NotADirectoryError': <class 'NotADirectoryError'>,
                 'NotImplemented': NotImplemented,
                 'NotImplementedError': <class 'NotImplementedError'>,
                 'OSError': <class 'OSError'>,
                 'OverflowError': <class 'OverflowError'>,
                 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>,
                 'PermissionError': <class 'PermissionError'>,
                 'ProcessLookupError': <class 'ProcessLookupError'>,
                 'RecursionError': <class 'RecursionError'>,
                 'ReferenceError': <class 'ReferenceError'>,
                 'ResourceWarning': <class 'ResourceWarning'>,
                 'RuntimeError': <class 'RuntimeError'>,
                 'RuntimeWarning': <class 'RuntimeWarning'>,
                 'StopAsyncIteration': <class 'StopAsyncIteration'>,
                 'StopIteration': <class 'StopIteration'>,
                 'SyntaxError': <class 'SyntaxError'>,
                 'SyntaxWarning': <class 'SyntaxWarning'>,
                 'SystemError': <class 'SystemError'>,
                 'SystemExit': <class 'SystemExit'>,
                 'TabError': <class 'TabError'>,
                 'TimeoutError': <class 'TimeoutError'>,
                 'True': True,
                 'TypeError': <class 'TypeError'>,
                 'UnboundLocalError': <class 'UnboundLocalError'>,
                 'UnicodeDecodeError': <class 'UnicodeDecodeError'>,
                 'UnicodeEncodeError': <class 'UnicodeEncodeError'>,
                 'UnicodeError': <class 'UnicodeError'>,
                 'UnicodeTranslateError': <class 'UnicodeTranslateError'>,
                 'UnicodeWarning': <class 'UnicodeWarning'>,
                 'UserWarning': <class 'UserWarning'>,
                 'ValueError': <class 'ValueError'>,
                 'Warning': <class 'Warning'>,
                 'WindowsError': <class 'OSError'>,
                 'ZeroDivisionError': <class 'ZeroDivisionError'>,
                 '__build_class__': <built-in function __build_class__>,
                 '__debug__': True,
                 '__doc__': 'Built-in functions, exceptions, and other objects.\n'
                            '\n'
                            "Noteworthy: None is the `nil' object; Ellipsis represents `...' "
                            'in slices.',
                 '__import__': <built-in function __import__>,
                 '__loader__': <class '_frozen_importlib.BuiltinImporter'>,
                 '__name__': 'builtins',
                 '__package__': '',
                 '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>),
                 'abs': <built-in function abs>,
                 'all': <built-in function all>,
                 'any': <built-in function any>,
                 'ascii': <built-in function ascii>,
                 'bin': <built-in function bin>,
                 'bool': <class 'bool'>,
                 'breakpoint': <built-in function breakpoint>,
                 'bytearray': <class 'bytearray'>,
                 'bytes': <class 'bytes'>,
                 'callable': <built-in function callable>,
                 'chr': <built-in function chr>,
                 'classmethod': <class 'classmethod'>,
                 'compile': <built-in function compile>,
                 'complex': <class 'complex'>,
                 'delattr': <built-in function delattr>,
                 'dict': <class 'dict'>,
                 'dir': <built-in function dir>,
                 'divmod': <built-in function divmod>,
                 'enumerate': <class 'enumerate'>,
                 'eval': <built-in function eval>,
                 'exec': <built-in function exec>,
                 'filter': <class 'filter'>,
                 'float': <class 'float'>,
                 'format': <built-in function format>,
                 'frozenset': <class 'frozenset'>,
                 'getattr': <built-in function getattr>,
                 'globals': <built-in function globals>,
                 'hasattr': <built-in function hasattr>,
                 'hash': <built-in function hash>,
                 'hex': <built-in function hex>,
                 'id': <built-in function id>,
                 'input': <built-in function input>,
                 'int': <class 'int'>,
                 'isinstance': <built-in function isinstance>,
                 'issubclass': <built-in function issubclass>,
                 'iter': <built-in function iter>,
                 'len': <built-in function len>,
                 'list': <class 'list'>,
                 'locals': <built-in function locals>,
                 'map': <class 'map'>,
                 'max': <built-in function max>,
                 'memoryview': <class 'memoryview'>,
                 'min': <built-in function min>,
                 'next': <built-in function next>,
                 'object': <class 'object'>,
                 'oct': <built-in function oct>,
                 'open': <built-in function open>,
                 'ord': <built-in function ord>,
                 'pow': <built-in function pow>,
                 'print': <built-in function print>,
                 'property': <class 'property'>,
                 'range': <class 'range'>,
                 'repr': <built-in function repr>,
                 'reversed': <class 'reversed'>,
                 'round': <built-in function round>,
                 'set': <class 'set'>,
                 'setattr': <built-in function setattr>,
                 'slice': <class 'slice'>,
                 'sorted': <built-in function sorted>,
                 'staticmethod': <class 'staticmethod'>,
                 'str': <class 'str'>,
                 'sum': <built-in function sum>,
                 'super': <class 'super'>,
                 'tuple': <class 'tuple'>,
                 'type': <class 'type'>,
                 'vars': <built-in function vars>,
                 'zip': <class 'zip'>}
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
sys => <module 'sys' (built-in)>
_tkinter => <module '_tkinter' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_tkinter.pyd'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
_magic_re => re.compile('([\\\\{}])')
_space_re => re.compile('([\\s])', re.ASCII)
_join => <function _join at 0x00000185E36B89D0>
_stringify => <function _stringify at 0x00000185E36B8A60>
_flatten => <built-in function _flatten>
_cnfmerge => <function _cnfmerge at 0x00000185E36B8AF0>
_splitdict => <function _splitdict at 0x00000185E36B8B80>
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
_support_default_root => True
_default_root => <tkinter.Tk object .>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
_get_default_root => <function _get_default_root at 0x00000185E36B8D30>
_tkerror => <function _tkerror at 0x00000185E36B8DC0>
_exit => <function _exit at 0x00000185E36B8E50>
_varnum => 0
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tk => <class 'tkinter.Tk'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Canvas => <class 'tkinter.Canvas'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Label => <class 'tkinter.Label'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
_setit => <class 'tkinter._setit'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
PhotoImage => <class 'tkinter.PhotoImage'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
_test => <function _test at 0x00000185E371C550>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>


===========================================================================

File "tkinter\__init__.py", line 4009, in __init__
Local variables:
self => <tkinter.PhotoImage object at 0x00000185E3A29AF0>
imgtype => 'photo'
name => 'pyimage1'
cnf => {'file': 'img/mc1.png'}
master => <tkinter.Tk object .>
kw => {'file': 'img/mc1.png'}
options => ('-file', 'img/mc1.png')
k => 'file'
v => 'img/mc1.png'

Global variables:
__name__ => 'tkinter'
__doc__ => ('Wrapper functions for Tcl/Tk.\n'
            '\n'
            'Tkinter provides classes which allow the display, positioning and\n'
            'control of widgets. Toplevel widgets are Tk and Toplevel. Other\n'
            'widgets are Frame, Label, Entry, Text, Canvas, Button, Radiobutton,\n'
            'Checkbutton, Scale, Listbox, Scrollbar, OptionMenu, Spinbox\n'
            'LabelFrame and PanedWindow.\n'
            '\n'
            'Properties of the widgets are specified with keyword arguments.\n'
            'Keyword arguments have the same name as the corresponding resource\n'
            'under Tk.\n'
            '\n'
            'Widgets are positioned with one of the geometry managers Place, Pack\n'
            'or Grid. These managers can be called with methods place, pack, grid\n'
            'available in every Widget.\n'
            '\n'
            'Actions are bound to events by resources (e.g. keyword argument\n'
            'command) or with the method bind.\n'
            '\n'
            'Example (Hello, World):\n'
            'import tkinter\n'
            'from tkinter.constants import *\n'
            'tk = tkinter.Tk()\n'
            'frame = tkinter.Frame(tk, relief=RIDGE, borderwidth=2)\n'
            'frame.pack(fill=BOTH,expand=1)\n'
            'label = tkinter.Label(frame, text="Hello, World")\n'
            'label.pack(fill=X, expand=1)\n'
            'button = tkinter.Button(frame,text="Exit",command=tk.destroy)\n'
            'button.pack(side=BOTTOM)\n'
            'tk.mainloop()\n')
__package__ => 'tkinter'
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => ModuleSpec(name='tkinter', loader=<pyimod03_importers.FrozenImporter object at 0x00000185E2409040>, origin='C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\__init__.pyc', submodule_search_locations=['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter'])
__path__ => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\tkinter']
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\tkinter\\__init__.pyc')
__cached__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
               'laucher\\installer\\dist\\main\\tkinter\\__init__.pyc')
__builtins__ => {'ArithmeticError': <class 'ArithmeticError'>,
                 'AssertionError': <class 'AssertionError'>,
                 'AttributeError': <class 'AttributeError'>,
                 'BaseException': <class 'BaseException'>,
                 'BlockingIOError': <class 'BlockingIOError'>,
                 'BrokenPipeError': <class 'BrokenPipeError'>,
                 'BufferError': <class 'BufferError'>,
                 'BytesWarning': <class 'BytesWarning'>,
                 'ChildProcessError': <class 'ChildProcessError'>,
                 'ConnectionAbortedError': <class 'ConnectionAbortedError'>,
                 'ConnectionError': <class 'ConnectionError'>,
                 'ConnectionRefusedError': <class 'ConnectionRefusedError'>,
                 'ConnectionResetError': <class 'ConnectionResetError'>,
                 'DeprecationWarning': <class 'DeprecationWarning'>,
                 'EOFError': <class 'EOFError'>,
                 'Ellipsis': Ellipsis,
                 'EnvironmentError': <class 'OSError'>,
                 'Exception': <class 'Exception'>,
                 'False': False,
                 'FileExistsError': <class 'FileExistsError'>,
                 'FileNotFoundError': <class 'FileNotFoundError'>,
                 'FloatingPointError': <class 'FloatingPointError'>,
                 'FutureWarning': <class 'FutureWarning'>,
                 'GeneratorExit': <class 'GeneratorExit'>,
                 'IOError': <class 'OSError'>,
                 'ImportError': <class 'ImportError'>,
                 'ImportWarning': <class 'ImportWarning'>,
                 'IndentationError': <class 'IndentationError'>,
                 'IndexError': <class 'IndexError'>,
                 'InterruptedError': <class 'InterruptedError'>,
                 'IsADirectoryError': <class 'IsADirectoryError'>,
                 'KeyError': <class 'KeyError'>,
                 'KeyboardInterrupt': <class 'KeyboardInterrupt'>,
                 'LookupError': <class 'LookupError'>,
                 'MemoryError': <class 'MemoryError'>,
                 'ModuleNotFoundError': <class 'ModuleNotFoundError'>,
                 'NameError': <class 'NameError'>,
                 'None': None,
                 'NotADirectoryError': <class 'NotADirectoryError'>,
                 'NotImplemented': NotImplemented,
                 'NotImplementedError': <class 'NotImplementedError'>,
                 'OSError': <class 'OSError'>,
                 'OverflowError': <class 'OverflowError'>,
                 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>,
                 'PermissionError': <class 'PermissionError'>,
                 'ProcessLookupError': <class 'ProcessLookupError'>,
                 'RecursionError': <class 'RecursionError'>,
                 'ReferenceError': <class 'ReferenceError'>,
                 'ResourceWarning': <class 'ResourceWarning'>,
                 'RuntimeError': <class 'RuntimeError'>,
                 'RuntimeWarning': <class 'RuntimeWarning'>,
                 'StopAsyncIteration': <class 'StopAsyncIteration'>,
                 'StopIteration': <class 'StopIteration'>,
                 'SyntaxError': <class 'SyntaxError'>,
                 'SyntaxWarning': <class 'SyntaxWarning'>,
                 'SystemError': <class 'SystemError'>,
                 'SystemExit': <class 'SystemExit'>,
                 'TabError': <class 'TabError'>,
                 'TimeoutError': <class 'TimeoutError'>,
                 'True': True,
                 'TypeError': <class 'TypeError'>,
                 'UnboundLocalError': <class 'UnboundLocalError'>,
                 'UnicodeDecodeError': <class 'UnicodeDecodeError'>,
                 'UnicodeEncodeError': <class 'UnicodeEncodeError'>,
                 'UnicodeError': <class 'UnicodeError'>,
                 'UnicodeTranslateError': <class 'UnicodeTranslateError'>,
                 'UnicodeWarning': <class 'UnicodeWarning'>,
                 'UserWarning': <class 'UserWarning'>,
                 'ValueError': <class 'ValueError'>,
                 'Warning': <class 'Warning'>,
                 'WindowsError': <class 'OSError'>,
                 'ZeroDivisionError': <class 'ZeroDivisionError'>,
                 '__build_class__': <built-in function __build_class__>,
                 '__debug__': True,
                 '__doc__': 'Built-in functions, exceptions, and other objects.\n'
                            '\n'
                            "Noteworthy: None is the `nil' object; Ellipsis represents `...' "
                            'in slices.',
                 '__import__': <built-in function __import__>,
                 '__loader__': <class '_frozen_importlib.BuiltinImporter'>,
                 '__name__': 'builtins',
                 '__package__': '',
                 '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>),
                 'abs': <built-in function abs>,
                 'all': <built-in function all>,
                 'any': <built-in function any>,
                 'ascii': <built-in function ascii>,
                 'bin': <built-in function bin>,
                 'bool': <class 'bool'>,
                 'breakpoint': <built-in function breakpoint>,
                 'bytearray': <class 'bytearray'>,
                 'bytes': <class 'bytes'>,
                 'callable': <built-in function callable>,
                 'chr': <built-in function chr>,
                 'classmethod': <class 'classmethod'>,
                 'compile': <built-in function compile>,
                 'complex': <class 'complex'>,
                 'delattr': <built-in function delattr>,
                 'dict': <class 'dict'>,
                 'dir': <built-in function dir>,
                 'divmod': <built-in function divmod>,
                 'enumerate': <class 'enumerate'>,
                 'eval': <built-in function eval>,
                 'exec': <built-in function exec>,
                 'filter': <class 'filter'>,
                 'float': <class 'float'>,
                 'format': <built-in function format>,
                 'frozenset': <class 'frozenset'>,
                 'getattr': <built-in function getattr>,
                 'globals': <built-in function globals>,
                 'hasattr': <built-in function hasattr>,
                 'hash': <built-in function hash>,
                 'hex': <built-in function hex>,
                 'id': <built-in function id>,
                 'input': <built-in function input>,
                 'int': <class 'int'>,
                 'isinstance': <built-in function isinstance>,
                 'issubclass': <built-in function issubclass>,
                 'iter': <built-in function iter>,
                 'len': <built-in function len>,
                 'list': <class 'list'>,
                 'locals': <built-in function locals>,
                 'map': <class 'map'>,
                 'max': <built-in function max>,
                 'memoryview': <class 'memoryview'>,
                 'min': <built-in function min>,
                 'next': <built-in function next>,
                 'object': <class 'object'>,
                 'oct': <built-in function oct>,
                 'open': <built-in function open>,
                 'ord': <built-in function ord>,
                 'pow': <built-in function pow>,
                 'print': <built-in function print>,
                 'property': <class 'property'>,
                 'range': <class 'range'>,
                 'repr': <built-in function repr>,
                 'reversed': <class 'reversed'>,
                 'round': <built-in function round>,
                 'set': <class 'set'>,
                 'setattr': <built-in function setattr>,
                 'slice': <class 'slice'>,
                 'sorted': <built-in function sorted>,
                 'staticmethod': <class 'staticmethod'>,
                 'str': <class 'str'>,
                 'sum': <built-in function sum>,
                 'super': <class 'super'>,
                 'tuple': <class 'tuple'>,
                 'type': <class 'type'>,
                 'vars': <built-in function vars>,
                 'zip': <class 'zip'>}
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
sys => <module 'sys' (built-in)>
_tkinter => <module '_tkinter' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\_tkinter.pyd'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
_magic_re => re.compile('([\\\\{}])')
_space_re => re.compile('([\\s])', re.ASCII)
_join => <function _join at 0x00000185E36B89D0>
_stringify => <function _stringify at 0x00000185E36B8A60>
_flatten => <built-in function _flatten>
_cnfmerge => <function _cnfmerge at 0x00000185E36B8AF0>
_splitdict => <function _splitdict at 0x00000185E36B8B80>
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
_support_default_root => True
_default_root => <tkinter.Tk object .>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
_get_default_root => <function _get_default_root at 0x00000185E36B8D30>
_tkerror => <function _tkerror at 0x00000185E36B8DC0>
_exit => <function _exit at 0x00000185E36B8E50>
_varnum => 0
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tk => <class 'tkinter.Tk'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Canvas => <class 'tkinter.Canvas'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Label => <class 'tkinter.Label'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
_setit => <class 'tkinter._setit'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
PhotoImage => <class 'tkinter.PhotoImage'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
_test => <function _test at 0x00000185E371C550>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>


===========================================================================

During handling of the above exception, another exception occurred:
Following is an exhaustive stack trace (most recent call last) for TypeError("unsupported operand type(s) for +: 'int' and 'str'")

===========================================================================

File "main.py", line 426, in <module>
Local variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")

Global variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")


===========================================================================

The above exception was the direct cause of the following exception:
Following is an exhaustive stack trace (most recent call last) for ValueError('exception raised')

===========================================================================

File "main.py", line 429, in <module>
Local variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")

Global variables:
__name__ => '__main__'
__doc__ => None
__package__ => None
__loader__ => <pyimod03_importers.FrozenImporter object at 0x00000185E2409040>
__spec__ => None
__annotations__ => {}
__builtins__ => <module 'builtins' (built-in)>
__file__ => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
             'laucher\\installer\\dist\\main\\main.py')
_pyi_main_co => <code object <module> at 0x00000185E2F80DF0, file "main.py", line 1>
sys => <module 'sys' (built-in)>
pyimod03_importers => <module 'pyimod03_importers' from 'PyInstaller\\loader\\pyimod03_importers.py'>
os => <module 'os' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\os.pyc'>
VIRTENV => 'VIRTUAL_ENV'
python_path => ['C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\base_library.zip',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main\\lib-dynload',
                'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
                'laucher\\installer\\dist\\main']
pth => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
        'laucher\\installer\\dist\\main')
NullWriter => <class '__main__.NullWriter'>
encodings => <module 'encodings' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\encodings\\__init__.pyc'>
pyimod04_ctypes => <module 'pyimod04_ctypes' from 'PyInstaller\\loader\\pyimod04_ctypes.py'>
d => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
      'laucher\\installer\\dist\\main\\eggs')
pkgutil => <module 'pkgutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkgutil.pyc'>
FrozenImporter => <class 'pyimod03_importers.FrozenImporter'>
_orig_pkgutil_iter_modules => <function iter_modules at 0x00000185E2BBF9D0>
_pyi_pkgutil_iter_modules => <function _pyi_pkgutil_iter_modules at 0x00000185E2A2F0D0>
multiprocessing => <module 'multiprocessing' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\__init__.pyc'>
spawn => <module 'multiprocessing.spawn' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\spawn.pyc'>
_args_from_interpreter_flags => <function _args_from_interpreter_flags at 0x00000185E2CBEA60>
_freeze_support => <function _freeze_support at 0x00000185E2C1CB80>
forking => <module 'multiprocessing.popen_spawn_win32' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\multiprocessing\\popen_spawn_win32.pyc'>
FrozenSupportMixIn => <class '__main__.FrozenSupportMixIn'>
_Popen => <class '__main__._Popen'>
inspect => <module 'inspect' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\inspect.pyc'>
_orig_inspect_getsourcefile => <function getsourcefile at 0x00000185E2F1E1F0>
_pyi_getsourcefile => <function _pyi_getsourcefile at 0x00000185E2A2F670>
subprocess => <module 'subprocess' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\subprocess.pyc'>
io => <module 'io' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\io.pyc'>
Popen => <class '__main__.Popen'>
tcldir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
           'laucher\\installer\\dist\\main\\tcl')
tkdir => ('C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron '
          'laucher\\installer\\dist\\main\\tk')
is_darwin => False
pathlib => <module 'pathlib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pathlib.pyc'>
pkg_resources => <module 'pkg_resources' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\pkg_resources\\__init__.pyc'>
SYS_PREFIX => PureWindowsPath('C:/Users/evan/Documents/GitHub/Alpha67-Laucher-Zogmar/electron laucher/installer/dist/main')
_TocFilesystem => <class '__main__._TocFilesystem'>
_toc_tree_cache => {}
PyiFrozenProvider => <class '__main__.PyiFrozenProvider'>
time => <module 'time' (built-in)>
json => <module 'json' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\json\\__init__.pyc'>
Style => <class 'ttkbootstrap.style.Style'>
Progressbar => <class 'tkinter.ttk.Progressbar'>
askquestion => <function askquestion at 0x00000185E3923550>
showinfo => <function showinfo at 0x00000185E3923160>
Label => <class 'tkinter.Label'>
Canvas => <class 'tkinter.Canvas'>
PhotoImage => <class 'tkinter.PhotoImage'>
messagebox => <module 'tkinter.messagebox' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\messagebox.pyc'>
Tk => <class 'tkinter.Tk'>
enum => <module 'enum' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\enum.pyc'>
TclError => <class '_tkinter.TclError'>
constants => <module 'tkinter.constants' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\constants.pyc'>
NO => 0
FALSE => 0
OFF => 0
YES => 1
TRUE => 1
ON => 1
N => 'n'
S => 's'
W => 'w'
E => 'e'
NW => 'nw'
SW => 'sw'
NE => 'ne'
SE => 'se'
NS => 'ns'
EW => 'ew'
NSEW => 'nsew'
CENTER => 'center'
NONE => 'none'
X => 'x'
Y => 'y'
BOTH => 'both'
LEFT => 'left'
TOP => 'top'
RIGHT => 'right'
BOTTOM => 'bottom'
RAISED => 'raised'
SUNKEN => 'sunken'
FLAT => 'flat'
RIDGE => 'ridge'
GROOVE => 'groove'
SOLID => 'solid'
HORIZONTAL => 'horizontal'
VERTICAL => 'vertical'
NUMERIC => 'numeric'
CHAR => 'char'
WORD => 'word'
BASELINE => 'baseline'
INSIDE => 'inside'
OUTSIDE => 'outside'
SEL => 'sel'
SEL_FIRST => 'sel.first'
SEL_LAST => 'sel.last'
END => 'end'
INSERT => 'insert'
CURRENT => 'current'
ANCHOR => 'anchor'
ALL => 'all'
NORMAL => 'normal'
DISABLED => 'disabled'
ACTIVE => 'active'
HIDDEN => 'hidden'
CASCADE => 'cascade'
CHECKBUTTON => 'checkbutton'
COMMAND => 'command'
RADIOBUTTON => 'radiobutton'
SEPARATOR => 'separator'
SINGLE => 'single'
BROWSE => 'browse'
MULTIPLE => 'multiple'
EXTENDED => 'extended'
DOTBOX => 'dotbox'
UNDERLINE => 'underline'
PIESLICE => 'pieslice'
CHORD => 'chord'
ARC => 'arc'
FIRST => 'first'
LAST => 'last'
BUTT => 'butt'
PROJECTING => 'projecting'
ROUND => 'round'
BEVEL => 'bevel'
MITER => 'miter'
MOVETO => 'moveto'
SCROLL => 'scroll'
UNITS => 'units'
PAGES => 'pages'
re => <module 're' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\base_library.zip\\re.pyc'>
wantobjects => 1
TkVersion => 8.6
TclVersion => 8.6
READABLE => 2
WRITABLE => 4
EXCEPTION => 8
EventType => <enum 'EventType'>
Event => <class 'tkinter.Event'>
NoDefaultRoot => <function NoDefaultRoot at 0x00000185E36B8C10>
Variable => <class 'tkinter.Variable'>
StringVar => <class 'tkinter.StringVar'>
IntVar => <class 'tkinter.IntVar'>
DoubleVar => <class 'tkinter.DoubleVar'>
BooleanVar => <class 'tkinter.BooleanVar'>
mainloop => <function mainloop at 0x00000185E36B8EE0>
getint => <class 'int'>
getdouble => <class 'float'>
getboolean => <function getboolean at 0x00000185E36F1C10>
Misc => <class 'tkinter.Misc'>
CallWrapper => <class 'tkinter.CallWrapper'>
XView => <class 'tkinter.XView'>
YView => <class 'tkinter.YView'>
Wm => <class 'tkinter.Wm'>
Tcl => <function Tcl at 0x00000185E36F1CA0>
Pack => <class 'tkinter.Pack'>
Place => <class 'tkinter.Place'>
Grid => <class 'tkinter.Grid'>
BaseWidget => <class 'tkinter.BaseWidget'>
Widget => <class 'tkinter.Widget'>
Toplevel => <class 'tkinter.Toplevel'>
Button => <class 'tkinter.Button'>
Checkbutton => <class 'tkinter.Checkbutton'>
Entry => <class 'tkinter.Entry'>
Frame => <class 'tkinter.Frame'>
Listbox => <class 'tkinter.Listbox'>
Menu => <class 'tkinter.Menu'>
Menubutton => <class 'tkinter.Menubutton'>
Message => <class 'tkinter.Message'>
Radiobutton => <class 'tkinter.Radiobutton'>
Scale => <class 'tkinter.Scale'>
Scrollbar => <class 'tkinter.Scrollbar'>
Text => <class 'tkinter.Text'>
OptionMenu => <class 'tkinter.OptionMenu'>
Image => <class 'tkinter.Image'>
BitmapImage => <class 'tkinter.BitmapImage'>
image_names => <function image_names at 0x00000185E36F9B80>
image_types => <function image_types at 0x00000185E371C4C0>
Spinbox => <class 'tkinter.Spinbox'>
LabelFrame => <class 'tkinter.LabelFrame'>
PanedWindow => <class 'tkinter.PanedWindow'>
font => <module 'tkinter.font' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\font.pyc'>
ttk => <module 'tkinter.ttk' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\ttk.pyc'>
scrolledtext => <module 'tkinter.scrolledtext' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\scrolledtext.pyc'>
commondialog => <module 'tkinter.commondialog' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\tkinter\\commondialog.pyc'>
threading => <module 'threading' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\threading.pyc'>
urllib => <module 'urllib' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\urllib\\__init__.pyc'>
ZipFile => <class 'zipfile.ZipFile'>
shutil => <module 'shutil' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\shutil.pyc'>
crashreport => <module 'crashreport' from 'C:\\Users\\evan\\Documents\\GitHub\\Alpha67-Laucher-Zogmar\\electron laucher\\installer\\dist\\main\\crashreport.pyc'>
alert => <function alert at 0x00000185E364B1F0>
MainWindow => <class '__main__.MainWindow'>
root => <tkinter.Tk object .>
cause => TypeError("unsupported operand type(s) for +: 'int' and 'str'")


===========================================================================

